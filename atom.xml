<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.kilingzhang.com</id>
    <title>kilingzhang</title>
    <updated>2021-04-01T02:09:26.962Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blog.kilingzhang.com"/>
    <link rel="self" href="https://blog.kilingzhang.com/atom.xml"/>
    <subtitle>一只在奋斗的小透明🎈</subtitle>
    <logo>https://blog.kilingzhang.com/images/avatar.png</logo>
    <icon>https://blog.kilingzhang.com/favicon.ico</icon>
    <rights>All rights reserved 2021, kilingzhang</rights>
    <entry>
        <title type="html"><![CDATA[Mac Golang GDB 错误汇总]]></title>
        <id>https://blog.kilingzhang.com/post/golang-gdb-diao-shi-ti-shi-no-symbol-table-is-loaded-use-the-file-command/</id>
        <link href="https://blog.kilingzhang.com/post/golang-gdb-diao-shi-ti-shi-no-symbol-table-is-loaded-use-the-file-command/">
        </link>
        <updated>2021-03-31T13:50:53.000Z</updated>
        <summary type="html"><![CDATA[<p>问题：</p>
<blockquote>
<p>本地 MacOS 上通过 GDB 调试 golang 程序，结果提示 No symbol table is loaded. Use the &quot;file&quot; command</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<p>问题：</p>
<blockquote>
<p>本地 MacOS 上通过 GDB 调试 golang 程序，结果提示 No symbol table is loaded. Use the &quot;file&quot; command</p>
</blockquote>
<!-- more -->
<p>解决：</p>
<pre><code>go build -gcflags &quot;-N -l&quot; -ldflags=-compressdwarf=false main.go
</code></pre>
<p>问题：</p>
<blockquote>
<p>(gdb) run<br>
Starting program: /usr/local/bin/fabnacci<br>
Unable to find Mach task port for process-id 23330: (os/kern) failure (0x5).<br>
(please check gdb is codesigned - see taskgated(8))</p>
</blockquote>
<p>解决：</p>
<blockquote>
<p>创建证书:<br>
打开 Keychain Access 应用程序（/Applications/Utilities/Keychain Access.app）<br>
执行菜单 钥匙串访问 -&gt; 证书助理 -&gt; 创建证书<br>
创建一个位置位于系统的代码签名自签名根证书，并添加信任。<br>
Mojave (10.14) 之前的系统，直接执行：</p>
</blockquote>
<pre><code>codesign -fs gdb-cert $(which gdb)
</code></pre>
<blockquote>
<p>如果是 Mojave (10.14) 之后的系统，先创建一个文件 gdb-entitlement.xml，内容为:</p>
</blockquote>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;!DOCTYPE plist PUBLIC &quot;-//Apple//DTD PLIST 1.0//EN&quot; &quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;&gt;
&lt;plist version=&quot;1.0&quot;&gt;
&lt;dict&gt;
    &lt;key&gt;com.apple.security.cs.debugger&lt;/key&gt;
    &lt;true/&gt;
&lt;/dict&gt;
&lt;/plist&gt;
</code></pre>
<blockquote>
<p>再执行:</p>
</blockquote>
<pre><code>codesign --entitlements gdb-entitlement.xml -fs gdb-cert $(which gdb)
</code></pre>
<h2 id="参考阅读">参考阅读</h2>
<p><a href="https://ethancai.github.io/2019/01/24/debug-go-program/">Debugging Go Program</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记一次服务器无法访问外网的问题排查过程]]></title>
        <id>https://blog.kilingzhang.com/post/linux-wai-wang-bu-ke-fang-wen-wen-ti-pai-cha/</id>
        <link href="https://blog.kilingzhang.com/post/linux-wai-wang-bu-ke-fang-wen-wen-ti-pai-cha/">
        </link>
        <updated>2021-03-30T09:41:19.000Z</updated>
        <summary type="html"><![CDATA[<p>今天线上突然有一台机器的所有外网依赖接口开始报警。根据日志排查了下初步定为是该机器无法访问外网了。把机器脱离七层后开始排查问题。搞起～</p>
]]></summary>
        <content type="html"><![CDATA[<p>今天线上突然有一台机器的所有外网依赖接口开始报警。根据日志排查了下初步定为是该机器无法访问外网了。把机器脱离七层后开始排查问题。搞起～</p>
<!-- more -->
<p>第一反应就是先访问下外网地址。</p>
<pre><code>curl baidu.com
</code></pre>
<p>确定了是一个必现的问题。之后先随意 ping 了一下域名。</p>
<pre><code>ping baidu.com
</code></pre>
<p>发现无论 ping 任何域名都会返回如下的信息：</p>
<pre><code>Destination Host Unreachable
</code></pre>
<p>那么接下来开始排查网络是哪一步出了问题。</p>
<p><code>ping 127.0.0.1</code></p>
<p>如果 ping 的通说明tcp协议栈没有问题。</p>
<p><code>ping 主机地址</code></p>
<p>如果 ping的通说明网卡没有问题。</p>
<blockquote>
<p>「 ifconfig -a 」查看主机地址</p>
</blockquote>
<p><code>ping 路由默认网关</code></p>
<p>ping的通说明包可以到达路由器。</p>
<blockquote>
<p>「 route -n」查看默认路由</p>
</blockquote>
<p><code>ping DNS服务器地址</code></p>
<p>ping的通说明DNS服务期解析没有问题。</p>
<blockquote>
<p>「 cat /etc/resolv.conf 」查看DNS服务器</p>
</blockquote>
<p>最后发现路由默认的网关地址无法 ping 通。<br>
这时候突然想到昨天运维同学帮忙解决其他问题的时候重启过这台机器。这台机器的默认网卡和默认路由不是相同的网卡。猜测之前负责的同学是临时设置的，重启后路由默认网关应该是被重置为最原始配置了。</p>
<p>找到问题就简单了。把路由的默认网关改为正确的网关ip就好。</p>
<pre><code>删除之前的默认网关 （此步骤非必须，不同的网卡可以设置多个默认网关。）
route delete default gw x.x.x.x eth0

添加正确的的默认网关
route add default gw x.x.x.x eth0
</code></pre>
<p>验证</p>
<pre><code>curl baidu.com

&lt;html&gt;
&lt;meta http-equiv=&quot;refresh&quot; content=&quot;0;url=http://www.baidu.com/&quot;&gt;
&lt;/html&gt;
</code></pre>
<p>完美解决！问题到不是很难，但是排查和学习的过程很有趣。记录下、方便日后查询。</p>
<h2 id="参考资料">参考资料</h2>
<p><a href="https://www.jianshu.com/p/cd3cbfee4e51">linux Destination Host Unreachable</a><br>
<a href="https://os.51cto.com/art/201905/595857.htm">4种在Linux中检查默认网关或路由器IP地址的方法</a><br>
<a href="https://zh.wikihow.com/%E5%9C%A8Linux%E4%B8%8A%E6%B7%BB%E5%8A%A0%E6%88%96%E6%9B%B4%E6%94%B9%E9%BB%98%E8%AE%A4%E7%BD%91%E5%85%B3">如何在Linux上添加或更改默认网关</a><br>
<a href="https://blog.csdn.net/shangdi1988/article/details/65713582">Linux 如何查看修改DNS配置</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[go channel close 后再读取会发生什么？]]></title>
        <id>https://blog.kilingzhang.com/post/go-channel-close-hou-zai-du-qu-hui-fa-sheng-shi-me/</id>
        <link href="https://blog.kilingzhang.com/post/go-channel-close-hou-zai-du-qu-hui-fa-sheng-shi-me/">
        </link>
        <updated>2021-03-28T18:10:42.000Z</updated>
        <summary type="html"><![CDATA[<p>go channel close 后再读取会发生什么？</p>
]]></summary>
        <content type="html"><![CDATA[<p>go channel close 后再读取会发生什么？</p>
<!-- more -->
<p>这可能是日常开发的时候不会仔细思考的问题，今天看到了感觉非常有趣、决定好好的研究一下。实践是检验真理的唯一标准。</p>
<pre><code>ch := make(chan string, 10)
ch &lt;- &quot;2333&quot;
ch &lt;- &quot;2333&quot;
str := &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str)
close(ch)
str = &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str)
str = &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str)
</code></pre>
<p>输出</p>
<pre><code>&lt;-ch 2333
&lt;-ch 2333
&lt;-ch
</code></pre>
<p>我们可以看到channel在被关闭后是可以继续读取的。即使数据被全部读取完后，仍然会零值返回。这时候有人说了「channel读取不是有第二个参数返回吗？」会发生什么呢？让我们继续测试下。</p>
<pre><code>ch := make(chan string, 10)
ch &lt;- &quot;2333&quot;
ch &lt;- &quot;2333&quot;
str := &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str)
close(ch)
str, ok := &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str, &quot;ok:&quot;, ok)
str, ok = &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str, &quot;ok:&quot;, ok)
str, ok = &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str, &quot;ok:&quot;, ok)
</code></pre>
<p>输出</p>
<pre><code>&lt;-ch 2333
&lt;-ch 2333 ok: true
&lt;-ch  ok: false
&lt;-ch  ok: false
</code></pre>
<p>可以看到，即使通道关闭了，ok 变量仍然在channel有值返回的情况下返回true。所以并不能通过第二个变量来判断通道是否关闭。这个返回值只能用来判断通道内是否还有没有数据可以读取。</p>
<p>当然我们还可以通过range遍历通道。当channel被关闭后。range会自动结束并退出遍历。</p>
<pre><code>ch := make(chan string, 10)
ch &lt;- &quot;2333&quot;
ch &lt;- &quot;2333&quot;
str := &lt;-ch
fmt.Println(&quot;&lt;-ch&quot;, str)
close(ch)
for str := range ch {
    fmt.Println(&quot;&lt;-ch&quot;, str)
}
fmt.Println(&quot;finished&quot;)
</code></pre>
<p>输出</p>
<pre><code>&lt;-ch 2333
&lt;-ch 2333
finished
</code></pre>
<p>特别要注意的是当我们使用range遍历通道的时候、当通道不再有数据写入后应当关闭通道。否则会造成死锁的情况。</p>
<pre><code>fatal error: all goroutines are asleep - deadlock!
</code></pre>
<p>今天问题可以引申一个新的问题，当channel关闭到底做了哪些操作呢？什么时候才是真正的把channel关闭了呢？在我查找资料的时候看到了下面的文章。值得深入学习一下。可以让我们更好的理解channel。</p>
<h2 id="延展阅读">延展阅读</h2>
<p><a href="https://mp.weixin.qq.com/s?__biz=Mzg3NTU3OTgxOA==&amp;mid=2247486766&amp;idx=1&amp;sn=331cb5e2260e07272c2043b5c4fa7625&amp;chksm=cf3e1debf84994fdf1e4ba970a4ed168b0d6d775fd582488aba91f9c8c799d14c6dcdfd7b494&amp;scene=178&amp;cur_album_id=1749952077931331585#rd">Go 最细节篇 — chan 为啥没有判断 close 的接口 ?</a><br>
<a href="https://mp.weixin.qq.com/s?__biz=Mzg3NTU3OTgxOA==&amp;mid=2247486765&amp;idx=1&amp;sn=09547478e322816ece7934b58cb35bad&amp;source=41#wechat_redirect">golang chan 最详细原理剖析，全面源码分析！看完不可能不懂的！</a><br>
<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3NTU3OTgxOA==&amp;action=getalbum&amp;album_id=1749952077931331585&amp;scene=173&amp;from_msgid=2247486765&amp;from_itemidx=1&amp;count=3#wechat_redirect">Go 最细节篇</a><br>
<a href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3NTU3OTgxOA==&amp;action=getalbum&amp;album_id=1749948750287978500&amp;scene=173&amp;from_msgid=2247486765&amp;from_itemidx=1&amp;count=3#wechat_redirect">Golang 技术专辑</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[📚碎片学习]]></title>
        <id>https://blog.kilingzhang.com/post/sui-pian-xue-xi/</id>
        <link href="https://blog.kilingzhang.com/post/sui-pian-xue-xi/">
        </link>
        <updated>2021-03-28T16:36:12.000Z</updated>
        <summary type="html"><![CDATA[<p>👏 记录一些碎片化的技术知识点。可能是看到的技术点、面试题目、工作遇到的问题等等。我会将问题和个人思考及答案作为记录整理。方便日后查询。<br>
😌 随时更新 ......</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏 记录一些碎片化的技术知识点。可能是看到的技术点、面试题目、工作遇到的问题等等。我会将问题和个人思考及答案作为记录整理。方便日后查询。<br>
😌 随时更新 ......</p>
<!-- more -->
<h2 id="go-channel-close-后再读取会发生什么"><a href="/post/go-channel-close-hou-zai-du-qu-hui-fa-sheng-shi-me">go channel close 后再读取会发生什么？</a></h2>
<h2 id="记一次服务器无法访问外网的问题排查过程"><a href="/post/linux-wai-wang-bu-ke-fang-wen-wen-ti-pai-cha">记一次服务器无法访问外网的问题排查过程</a></h2>
<h2 id="mac-golang-gdb-错误汇总"><a href="/post/golang-gdb-diao-shi-ti-shi-no-symbol-table-is-loaded-use-the-file-command">Mac Golang GDB 错误汇总</a></h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://blog.kilingzhang.com/post/hello-gridea/</id>
        <link href="https://blog.kilingzhang.com/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>